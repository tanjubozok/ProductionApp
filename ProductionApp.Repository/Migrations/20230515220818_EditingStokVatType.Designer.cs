// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductionApp.Repository.Context;

#nullable disable

namespace ProductionApp.Repository.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230515220818_EditingStokVatType")]
    partial class EditingStokVatType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductionApp.Entities.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "01",
                            Color = "secondary",
                            CreatedDate = new DateTime(2023, 5, 16, 1, 8, 18, 94, DateTimeKind.Local).AddTicks(3230),
                            Name = "Telefon"
                        },
                        new
                        {
                            Id = 2,
                            Code = "02",
                            Color = "warning",
                            CreatedDate = new DateTime(2023, 5, 16, 1, 8, 18, 94, DateTimeKind.Local).AddTicks(3249),
                            Name = "Bilgisayar"
                        },
                        new
                        {
                            Id = 3,
                            Code = "03",
                            Color = "primary",
                            CreatedDate = new DateTime(2023, 5, 16, 1, 8, 18, 94, DateTimeKind.Local).AddTicks(3253),
                            Name = "Tablet"
                        },
                        new
                        {
                            Id = 4,
                            Code = "04",
                            Color = "dark",
                            CreatedDate = new DateTime(2023, 5, 16, 1, 8, 18, 94, DateTimeKind.Local).AddTicks(3256),
                            Name = "Tv"
                        },
                        new
                        {
                            Id = 5,
                            Code = "05",
                            Color = "info",
                            CreatedDate = new DateTime(2023, 5, 16, 1, 8, 18, 94, DateTimeKind.Local).AddTicks(3260),
                            Name = "Beyaz Eşya"
                        },
                        new
                        {
                            Id = 6,
                            Code = "06",
                            Color = "success",
                            CreatedDate = new DateTime(2023, 5, 16, 1, 8, 18, 94, DateTimeKind.Local).AddTicks(3263),
                            Name = "Oyun Konsolları"
                        });
                });

            modelBuilder.Entity("ProductionApp.Entities.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Stocks", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "152.11.001",
                            CreatedDate = new DateTime(2023, 5, 16, 1, 8, 18, 94, DateTimeKind.Local).AddTicks(3754),
                            Description = "Samsung Galaxy Z Fold3, Samsung Galaxy Z Fold3, Samsung Galaxy Z Fold3",
                            GroupId = 1,
                            Name = "Samsung Galaxy Z Fold3",
                            Price = 10707m,
                            VAT = 18m
                        },
                        new
                        {
                            Id = 2,
                            Code = "152.11.002",
                            CreatedDate = new DateTime(2023, 5, 16, 1, 8, 18, 94, DateTimeKind.Local).AddTicks(3760),
                            Description = "Samsung Galaxy Z Flip3, Samsung Galaxy Z Flip3, Samsung Galaxy Z Flip3",
                            GroupId = 1,
                            Name = "Samsung Galaxy Z Flip3",
                            Price = 10340m,
                            VAT = 18m
                        },
                        new
                        {
                            Id = 3,
                            Code = "152.11.003",
                            CreatedDate = new DateTime(2023, 5, 16, 1, 8, 18, 94, DateTimeKind.Local).AddTicks(3764),
                            Description = "Samsung Galaxy S20 FE (SM-G780G), Samsung Galaxy S20 FE (SM-G780G), Samsung Galaxy S20 FE (SM-G780G)",
                            GroupId = 1,
                            Name = "Samsung Galaxy S20 FE (SM-G780G)",
                            Price = 8068m,
                            VAT = 18m
                        },
                        new
                        {
                            Id = 4,
                            Code = "152.21.001",
                            CreatedDate = new DateTime(2023, 5, 16, 1, 8, 18, 94, DateTimeKind.Local).AddTicks(3769),
                            Description = "Apple iPhone 11 64 CB Siyah, Apple iPhone 11 64 CB Siyah, Apple iPhone 11 64 CB Siyah",
                            GroupId = 1,
                            Name = "Apple iPhone 11 64 CB Siyah",
                            Price = 10787m,
                            VAT = 18m
                        },
                        new
                        {
                            Id = 5,
                            Code = "152.21.002",
                            CreatedDate = new DateTime(2023, 5, 16, 1, 8, 18, 94, DateTimeKind.Local).AddTicks(3773),
                            Description = "Apple iPhone 12 64 CB Siyah, Apple iPhone 12 64 CB Siyah, Apple iPhone 12 64 CB Siyah",
                            GroupId = 1,
                            Name = "Apple iPhone 12 64 CB Siyah",
                            Price = 10787m,
                            VAT = 18m
                        });
                });

            modelBuilder.Entity("ProductionApp.Entities.Models.Stock", b =>
                {
                    b.HasOne("ProductionApp.Entities.Models.Group", "Group")
                        .WithMany("Stocks")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("ProductionApp.Entities.Models.Group", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
